# Copyright 2023 The Chromium Authors
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/rust/cargo_crate.gni")

cargo_crate("lib") {
  crate_name = "futures"
  epoch = "0.3"
  crate_type = "rlib"
  crate_root = "crate/src/lib.rs"
  sources = [
    "//hns/third_party/rust/futures/v0_3/crate/src/lib.rs",
    "//hns/third_party/rust/futures/v0_3/crate/tests/_require_features.rs",
    "//hns/third_party/rust/futures/v0_3/crate/tests/async_await_macros.rs",
    "//hns/third_party/rust/futures/v0_3/crate/tests/auto_traits.rs",
    "//hns/third_party/rust/futures/v0_3/crate/tests/bilock.rs",
    "//hns/third_party/rust/futures/v0_3/crate/tests/compat.rs",
    "//hns/third_party/rust/futures/v0_3/crate/tests/eager_drop.rs",
    "//hns/third_party/rust/futures/v0_3/crate/tests/eventual.rs",
    "//hns/third_party/rust/futures/v0_3/crate/tests/future_abortable.rs",
    "//hns/third_party/rust/futures/v0_3/crate/tests/future_basic_combinators.rs",
    "//hns/third_party/rust/futures/v0_3/crate/tests/future_fuse.rs",
    "//hns/third_party/rust/futures/v0_3/crate/tests/future_inspect.rs",
    "//hns/third_party/rust/futures/v0_3/crate/tests/future_join.rs",
    "//hns/third_party/rust/futures/v0_3/crate/tests/future_join_all.rs",
    "//hns/third_party/rust/futures/v0_3/crate/tests/future_obj.rs",
    "//hns/third_party/rust/futures/v0_3/crate/tests/future_select_all.rs",
    "//hns/third_party/rust/futures/v0_3/crate/tests/future_select_ok.rs",
    "//hns/third_party/rust/futures/v0_3/crate/tests/future_shared.rs",
    "//hns/third_party/rust/futures/v0_3/crate/tests/future_try_flatten_stream.rs",
    "//hns/third_party/rust/futures/v0_3/crate/tests/future_try_join_all.rs",
    "//hns/third_party/rust/futures/v0_3/crate/tests/io_buf_reader.rs",
    "//hns/third_party/rust/futures/v0_3/crate/tests/io_buf_writer.rs",
    "//hns/third_party/rust/futures/v0_3/crate/tests/io_cursor.rs",
    "//hns/third_party/rust/futures/v0_3/crate/tests/io_line_writer.rs",
    "//hns/third_party/rust/futures/v0_3/crate/tests/io_lines.rs",
    "//hns/third_party/rust/futures/v0_3/crate/tests/io_read.rs",
    "//hns/third_party/rust/futures/v0_3/crate/tests/io_read_exact.rs",
    "//hns/third_party/rust/futures/v0_3/crate/tests/io_read_line.rs",
    "//hns/third_party/rust/futures/v0_3/crate/tests/io_read_to_end.rs",
    "//hns/third_party/rust/futures/v0_3/crate/tests/io_read_to_string.rs",
    "//hns/third_party/rust/futures/v0_3/crate/tests/io_read_until.rs",
    "//hns/third_party/rust/futures/v0_3/crate/tests/io_window.rs",
    "//hns/third_party/rust/futures/v0_3/crate/tests/io_write.rs",
    "//hns/third_party/rust/futures/v0_3/crate/tests/lock_mutex.rs",
    "//hns/third_party/rust/futures/v0_3/crate/tests/macro_comma_support.rs",
    "//hns/third_party/rust/futures/v0_3/crate/tests/object_safety.rs",
    "//hns/third_party/rust/futures/v0_3/crate/tests/oneshot.rs",
    "//hns/third_party/rust/futures/v0_3/crate/tests/ready_queue.rs",
    "//hns/third_party/rust/futures/v0_3/crate/tests/recurse.rs",
    "//hns/third_party/rust/futures/v0_3/crate/tests/sink.rs",
    "//hns/third_party/rust/futures/v0_3/crate/tests/sink_fanout.rs",
    "//hns/third_party/rust/futures/v0_3/crate/tests/stream.rs",
    "//hns/third_party/rust/futures/v0_3/crate/tests/stream_abortable.rs",
    "//hns/third_party/rust/futures/v0_3/crate/tests/stream_buffer_unordered.rs",
    "//hns/third_party/rust/futures/v0_3/crate/tests/stream_catch_unwind.rs",
    "//hns/third_party/rust/futures/v0_3/crate/tests/stream_futures_ordered.rs",
    "//hns/third_party/rust/futures/v0_3/crate/tests/stream_futures_unordered.rs",
    "//hns/third_party/rust/futures/v0_3/crate/tests/stream_into_async_read.rs",
    "//hns/third_party/rust/futures/v0_3/crate/tests/stream_peekable.rs",
    "//hns/third_party/rust/futures/v0_3/crate/tests/stream_select_all.rs",
    "//hns/third_party/rust/futures/v0_3/crate/tests/stream_select_next_some.rs",
    "//hns/third_party/rust/futures/v0_3/crate/tests/stream_split.rs",
    "//hns/third_party/rust/futures/v0_3/crate/tests/stream_try_stream.rs",
    "//hns/third_party/rust/futures/v0_3/crate/tests/stream_unfold.rs",
    "//hns/third_party/rust/futures/v0_3/crate/tests/task_arc_wake.rs",
    "//hns/third_party/rust/futures/v0_3/crate/tests/task_atomic_waker.rs",
    "//hns/third_party/rust/futures/v0_3/crate/tests/test_macro.rs",
    "//hns/third_party/rust/futures/v0_3/crate/tests/try_join.rs",
    "//hns/third_party/rust/futures/v0_3/crate/tests_disabled/all.rs",
    "//hns/third_party/rust/futures/v0_3/crate/tests_disabled/stream.rs",
  ]
  inputs = [ "//hns/third_party/rust/futures/v0_3/crate/README.md" ]

  # Unit tests skipped. Generate with --with-tests to include them.
  build_native_rust_unit_tests = false
  edition = "2018"
  cargo_pkg_version = "0.3.27"
  cargo_pkg_name = "futures"
  cargo_pkg_description = "An implementation of futures and streams featuring zero allocations, composability, and iterator-like interfaces."
  library_configs -= [ "//build/config/compiler:chromium_code" ]
  library_configs += [ "//build/config/compiler:no_chromium_code" ]
  executable_configs -= [ "//build/config/compiler:chromium_code" ]
  executable_configs += [ "//build/config/compiler:no_chromium_code" ]
  deps = [
    "//hns/third_party/rust/futures_channel/v0_3:lib",
    "//hns/third_party/rust/futures_core/v0_3:lib",
    "//hns/third_party/rust/futures_executor/v0_3:lib",
    "//hns/third_party/rust/futures_io/v0_3:lib",
    "//hns/third_party/rust/futures_sink/v0_3:lib",
    "//hns/third_party/rust/futures_task/v0_3:lib",
    "//hns/third_party/rust/futures_util/v0_3:lib",
  ]
  features = [
    "alloc",
    "async-await",
    "executor",
    "futures-executor",
    "std",
  ]
}
